/*
 * ResourceQueryOptionsJPanel.java
 *
 * Created on October 2, 2008, 1:47 AM
 */

package sanchay.gui.common;

import java.awt.CardLayout;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.text.Document;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathExpression;
import org.htmlparser.util.NodeList;
import sanchay.GlobalProperties;
import sanchay.util.query.ResourceQueryOptions;

/**
 *
 * @author  eklavya
 */
public class ResourceQueryOptionsJPanel extends javax.swing.JPanel {

    private static final int ELEMENT=1;
    private static final int ATTR=2;
    private static final int TEXT=3;
    private static final int COMMENT=8;
    private static final int DOCUMENT=9;
    private NodeList allElements=null;
    private XPathExpression expr=null;
    private Document doc=null;
    private XPath xpath=null;
    private List listOfItems;
    private boolean whereClauseEnabled=false;
    private boolean compoundQueryEnabled=false;
    private String att;
    private JTextField queryField;
    private JButton done;
    private JPanel panel;
    private String selectedFileName=null;
    /** Creates new form ResourceQueryOptionsJPanel */
    public ResourceQueryOptionsJPanel() {
        initComponents();
        
        ((CardLayout) getLayout()).show(this, GlobalProperties.getIntlString("Syntactic_Corpus_Query"));
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rawCorpusQueryJPanel = new javax.swing.JPanel();
        nGramLMQueryJPanel = new javax.swing.JPanel();
        ngramQOrderLabel = new javax.swing.JLabel();
        ngramQOrderTextField = new javax.swing.JTextField();
        ngramQMinFreqLabel = new javax.swing.JLabel();
        ngramQMinFreqTextField = new javax.swing.JTextField();
        ngramQMaxFreqLabel = new javax.swing.JLabel();
        ngramQMaxFreqTextField = new javax.swing.JTextField();
        lexiconQueryJPanel = new javax.swing.JPanel();
        syntacticCorpusQueryJPanel = new javax.swing.JPanel();
        andOr1JComboBox = new javax.swing.JComboBox();
        tagJLabel = new javax.swing.JLabel();
        tagJComboBox = new javax.swing.JComboBox();
        andOr2JComboBox = new javax.swing.JComboBox();
        featureJLabel = new javax.swing.JLabel();
        featureJComboBox = new javax.swing.JComboBox();
        andOr3JComboBox = new javax.swing.JComboBox();
        featureValueJLabel = new javax.swing.JLabel();
        featureValueJComboBox = new javax.swing.JComboBox();
        treeViewJCheckBox = new javax.swing.JCheckBox();
        discourseCorpusQueryJPanel = new javax.swing.JPanel();
        parallelCorpusQueryJPanel = new javax.swing.JPanel();
        xmlCorpusQueryJPanel = new javax.swing.JPanel();
        panel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        fList = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        sList = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        wList = new javax.swing.JComboBox();
        relationList = new javax.swing.JComboBox();
        paraField = new javax.swing.JTextField();
        logicList = new javax.swing.JComboBox();
        textField = new javax.swing.JTextField();
        relationList2 = new javax.swing.JComboBox();
        paraField2 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        xpathButton = new javax.swing.JButton();
        cancelButton3 = new javax.swing.JButton();
        xqueryField = new javax.swing.JTextField();

        setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout rawCorpusQueryJPanelLayout = new javax.swing.GroupLayout(rawCorpusQueryJPanel);
        rawCorpusQueryJPanel.setLayout(rawCorpusQueryJPanelLayout);
        rawCorpusQueryJPanelLayout.setHorizontalGroup(
            rawCorpusQueryJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 934, Short.MAX_VALUE)
        );
        rawCorpusQueryJPanelLayout.setVerticalGroup(
            rawCorpusQueryJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 37, Short.MAX_VALUE)
        );

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("sanchay"); // NOI18N
        add(rawCorpusQueryJPanel, bundle.getString("Raw_Corpus_Query")); // NOI18N

        ngramQOrderLabel.setText(bundle.getString("Order:_")); // NOI18N
        nGramLMQueryJPanel.add(ngramQOrderLabel);

        ngramQOrderTextField.setPreferredSize(new java.awt.Dimension(75, 27));
        ngramQOrderTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ngramQOrderTextFieldActionPerformed(evt);
            }
        });
        nGramLMQueryJPanel.add(ngramQOrderTextField);

        ngramQMinFreqLabel.setText(bundle.getString("Min_Freq:")); // NOI18N
        nGramLMQueryJPanel.add(ngramQMinFreqLabel);

        ngramQMinFreqTextField.setPreferredSize(new java.awt.Dimension(75, 27));
        ngramQMinFreqTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ngramQMinFreqTextFieldActionPerformed(evt);
            }
        });
        nGramLMQueryJPanel.add(ngramQMinFreqTextField);

        ngramQMaxFreqLabel.setText(bundle.getString("Max_Freq:_")); // NOI18N
        nGramLMQueryJPanel.add(ngramQMaxFreqLabel);

        ngramQMaxFreqTextField.setPreferredSize(new java.awt.Dimension(75, 27));
        ngramQMaxFreqTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ngramQMaxFreqTextFieldActionPerformed(evt);
            }
        });
        nGramLMQueryJPanel.add(ngramQMaxFreqTextField);

        add(nGramLMQueryJPanel, "N-Gram LM Query");

        javax.swing.GroupLayout lexiconQueryJPanelLayout = new javax.swing.GroupLayout(lexiconQueryJPanel);
        lexiconQueryJPanel.setLayout(lexiconQueryJPanelLayout);
        lexiconQueryJPanelLayout.setHorizontalGroup(
            lexiconQueryJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 934, Short.MAX_VALUE)
        );
        lexiconQueryJPanelLayout.setVerticalGroup(
            lexiconQueryJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 37, Short.MAX_VALUE)
        );

        add(lexiconQueryJPanel, bundle.getString("Lexicon_Query")); // NOI18N

        syntacticCorpusQueryJPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 3, 5));

        andOr1JComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Or", "And" }));
        andOr1JComboBox.setPreferredSize(new java.awt.Dimension(50, 20));
        syntacticCorpusQueryJPanel.add(andOr1JComboBox);

        tagJLabel.setLabelFor(tagJComboBox);
        tagJLabel.setText(bundle.getString("_Tag:_")); // NOI18N
        tagJLabel.setToolTipText(bundle.getString("Tag_to_be_searched")); // NOI18N
        tagJLabel.setPreferredSize(new java.awt.Dimension(40, 14));
        syntacticCorpusQueryJPanel.add(tagJLabel);

        tagJComboBox.setEditable(true);
        tagJComboBox.setPreferredSize(new java.awt.Dimension(100, 20));
        syntacticCorpusQueryJPanel.add(tagJComboBox);

        andOr2JComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Or", "And" }));
        andOr2JComboBox.setPreferredSize(new java.awt.Dimension(50, 20));
        syntacticCorpusQueryJPanel.add(andOr2JComboBox);

        featureJLabel.setLabelFor(featureJComboBox);
        featureJLabel.setText(bundle.getString("__Feature:_")); // NOI18N
        featureJLabel.setToolTipText(bundle.getString("Feature_to_be_searched")); // NOI18N
        featureJLabel.setPreferredSize(new java.awt.Dimension(70, 14));
        syntacticCorpusQueryJPanel.add(featureJLabel);

        featureJComboBox.setEditable(true);
        featureJComboBox.setPreferredSize(new java.awt.Dimension(100, 20));
        syntacticCorpusQueryJPanel.add(featureJComboBox);

        andOr3JComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Or", "And" }));
        andOr3JComboBox.setPreferredSize(new java.awt.Dimension(50, 20));
        syntacticCorpusQueryJPanel.add(andOr3JComboBox);

        featureValueJLabel.setLabelFor(featureJComboBox);
        featureValueJLabel.setText(bundle.getString("_Value:_")); // NOI18N
        featureValueJLabel.setToolTipText(bundle.getString("Feature_value_to_be_searched")); // NOI18N
        featureValueJLabel.setPreferredSize(new java.awt.Dimension(50, 14));
        syntacticCorpusQueryJPanel.add(featureValueJLabel);

        featureValueJComboBox.setEditable(true);
        featureValueJComboBox.setPreferredSize(new java.awt.Dimension(100, 20));
        syntacticCorpusQueryJPanel.add(featureValueJComboBox);

        treeViewJCheckBox.setSelected(true);
        treeViewJCheckBox.setText(bundle.getString("Tree_View")); // NOI18N
        treeViewJCheckBox.setToolTipText(bundle.getString("See_the_matching_documents_in_the_Tree_View")); // NOI18N
        treeViewJCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        syntacticCorpusQueryJPanel.add(treeViewJCheckBox);

        add(syntacticCorpusQueryJPanel, "Syntactic Corpus Query");

        javax.swing.GroupLayout discourseCorpusQueryJPanelLayout = new javax.swing.GroupLayout(discourseCorpusQueryJPanel);
        discourseCorpusQueryJPanel.setLayout(discourseCorpusQueryJPanelLayout);
        discourseCorpusQueryJPanelLayout.setHorizontalGroup(
            discourseCorpusQueryJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 934, Short.MAX_VALUE)
        );
        discourseCorpusQueryJPanelLayout.setVerticalGroup(
            discourseCorpusQueryJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 37, Short.MAX_VALUE)
        );

        add(discourseCorpusQueryJPanel, bundle.getString("Discourse_Corpus_Query")); // NOI18N

        javax.swing.GroupLayout parallelCorpusQueryJPanelLayout = new javax.swing.GroupLayout(parallelCorpusQueryJPanel);
        parallelCorpusQueryJPanel.setLayout(parallelCorpusQueryJPanelLayout);
        parallelCorpusQueryJPanelLayout.setHorizontalGroup(
            parallelCorpusQueryJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 934, Short.MAX_VALUE)
        );
        parallelCorpusQueryJPanelLayout.setVerticalGroup(
            parallelCorpusQueryJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 37, Short.MAX_VALUE)
        );

        add(parallelCorpusQueryJPanel, bundle.getString("Parallel_Corpus_Query")); // NOI18N

        xmlCorpusQueryJPanel.setLayout(new java.awt.GridLayout(0, 1, 0, 3));

        jLabel1.setText(bundle.getString("SELECT")); // NOI18N
        panel1.add(jLabel1);

        fList.setEditable(true);
        fList.setPreferredSize(new java.awt.Dimension(75, 19));
        panel1.add(fList);

        jLabel2.setText(bundle.getString("FROM")); // NOI18N
        panel1.add(jLabel2);

        sList.setEditable(true);
        sList.setPreferredSize(new java.awt.Dimension(75, 19));
        panel1.add(sList);

        jLabel3.setText(bundle.getString("WHERE")); // NOI18N
        panel1.add(jLabel3);

        wList.setEditable(true);
        wList.setPreferredSize(new java.awt.Dimension(75, 19));
        panel1.add(wList);

        relationList.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "isEqualTo", "isNotEqualTo", "isGreaterThan", "isLessThan", "isGreaterThanOrEqualTo", "isLessThanOrEqualTo" }));
        relationList.setPreferredSize(new java.awt.Dimension(125, 27));
        panel1.add(relationList);

        paraField.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        paraField.setPreferredSize(new java.awt.Dimension(75, 19));
        panel1.add(paraField);

        logicList.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "or", "and" }));
        panel1.add(logicList);

        textField.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        textField.setPreferredSize(new java.awt.Dimension(75, 19));
        panel1.add(textField);

        relationList2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "isEqualTo", "isNotEqualTo", "isGreaterThan", "isLessThan", "isGreaterThanOrEqualTo", "isLessThanOrEqualTo" }));
        relationList2.setPreferredSize(new java.awt.Dimension(125, 27));
        panel1.add(relationList2);

        paraField2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        paraField2.setPreferredSize(new java.awt.Dimension(75, 19));
        panel1.add(paraField2);

        xmlCorpusQueryJPanel.add(panel1);

        xpathButton.setText(bundle.getString("Click_to_use_XPath")); // NOI18N
        xpathButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        xpathButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xpathButtonActionPerformed(evt);
            }
        });
        jPanel2.add(xpathButton);

        cancelButton3.setText(bundle.getString("Cancel")); // NOI18N
        cancelButton3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cancelButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(cancelButton3);

        xqueryField.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        xqueryField.setPreferredSize(new java.awt.Dimension(225, 19));
        jPanel2.add(xqueryField);

        xmlCorpusQueryJPanel.add(jPanel2);

        add(xmlCorpusQueryJPanel, "XML Corpus Query");
    }// </editor-fold>//GEN-END:initComponents

    private void ngramQMaxFreqTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ngramQMaxFreqTextFieldActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_ngramQMaxFreqTextFieldActionPerformed

    private void ngramQMinFreqTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ngramQMinFreqTextFieldActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_ngramQMinFreqTextFieldActionPerformed

    private void ngramQOrderTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ngramQOrderTextFieldActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_ngramQOrderTextFieldActionPerformed

    private void xpathButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xpathButtonActionPerformed
        paraField.setText("");
        sList.setSelectedIndex(0);
        fList.setSelectedIndex(0);
        wList.setSelectedIndex(0);
        relationList.setSelectedIndex(0);
        whereClauseEnabled = false;
        textField.setText("");
        logicList.setSelectedIndex(0);
        relationList2.setSelectedIndex(0);
        compoundQueryEnabled = false;
        
        xpathButton.setEnabled(false);
        cancelButton3.setEnabled(true);
        sList.setEnabled(false);
        fList.setEnabled(false);
}//GEN-LAST:event_xpathButtonActionPerformed

    private void cancelButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButton3ActionPerformed

        sList.setEnabled(true);
        fList.setEnabled(true);
        xpathButton.setEnabled(true);
        cancelButton3.setEnabled(false);
}//GEN-LAST:event_cancelButton3ActionPerformed
    public void getOptionsSSF(ResourceQueryOptions resourceQueryOptions)
    {
//        resourceQueryOptions.syntacticCorpusQueryOptions.andOr1 = (String) andOr1JComboBox.getSelectedItem();
//        resourceQueryOptions.syntacticCorpusQueryOptions.tag = (String) tagJComboBox.getSelectedItem();
//        resourceQueryOptions.syntacticCorpusQueryOptions.andOr2 = (String) andOr2JComboBox.getSelectedItem();
//        resourceQueryOptions.syntacticCorpusQueryOptions.feature = (String) featureJComboBox.getSelectedItem();
//        resourceQueryOptions.syntacticCorpusQueryOptions.andOr3 = (String) andOr3JComboBox.getSelectedItem();
//        resourceQueryOptions.syntacticCorpusQueryOptions.featureValue = (String) featureValueJComboBox.getSelectedItem();
//        resourceQueryOptions.syntacticCorpusQueryOptions.treeView = treeViewJCheckBox.isSelected();
    }

    void getOptionsNGram(ResourceQueryOptions resourceQueryOptions) {
        String order,minfreq,maxfreq;
        order = (String) ngramQOrderTextField.getText();
        minfreq = (String) ngramQMinFreqTextField.getText();
        maxfreq = (String) ngramQMaxFreqTextField.getText();
        if(!order.isEmpty())
            resourceQueryOptions.nGramLMQueryOptions.order = Integer.parseInt((String) ngramQOrderTextField.getText());
        if(!minfreq.isEmpty())
            resourceQueryOptions.nGramLMQueryOptions.minFreq = Integer.parseInt((String) ngramQMinFreqTextField.getText());
        if(!maxfreq.isEmpty())
            resourceQueryOptions.nGramLMQueryOptions.maxFreq = Integer.parseInt((String) ngramQMaxFreqTextField.getText());
        //if((String) ngramQMinProbTextField.getText() !=null)
          //  resourceQueryOptions.nGramLMQueryOptions.minProb = Integer.parseInt((String) ngramQMinProbTextField.getText());
        //if((String) ngramQMaxProbTextField.getText() !=null)
          //  resourceQueryOptions.nGramLMQueryOptions.maxProb = Integer.parseInt((String) ngramQMaxProbTextField.getText());
    }

    void getOptionsXML(ResourceQueryOptions resourceQueryOptions) {
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox andOr1JComboBox;
    private javax.swing.JComboBox andOr2JComboBox;
    private javax.swing.JComboBox andOr3JComboBox;
    private javax.swing.JButton cancelButton3;
    private javax.swing.JPanel discourseCorpusQueryJPanel;
    private javax.swing.JComboBox fList;
    private javax.swing.JComboBox featureJComboBox;
    private javax.swing.JLabel featureJLabel;
    private javax.swing.JComboBox featureValueJComboBox;
    private javax.swing.JLabel featureValueJLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel lexiconQueryJPanel;
    private javax.swing.JComboBox logicList;
    private javax.swing.JPanel nGramLMQueryJPanel;
    private javax.swing.JLabel ngramQMaxFreqLabel;
    private javax.swing.JTextField ngramQMaxFreqTextField;
    private javax.swing.JLabel ngramQMinFreqLabel;
    private javax.swing.JTextField ngramQMinFreqTextField;
    private javax.swing.JLabel ngramQOrderLabel;
    private javax.swing.JTextField ngramQOrderTextField;
    private javax.swing.JPanel panel1;
    private javax.swing.JTextField paraField;
    private javax.swing.JTextField paraField2;
    private javax.swing.JPanel parallelCorpusQueryJPanel;
    private javax.swing.JPanel rawCorpusQueryJPanel;
    private javax.swing.JComboBox relationList;
    private javax.swing.JComboBox relationList2;
    private javax.swing.JComboBox sList;
    private javax.swing.JPanel syntacticCorpusQueryJPanel;
    private javax.swing.JComboBox tagJComboBox;
    private javax.swing.JLabel tagJLabel;
    private javax.swing.JTextField textField;
    private javax.swing.JCheckBox treeViewJCheckBox;
    private javax.swing.JComboBox wList;
    private javax.swing.JPanel xmlCorpusQueryJPanel;
    private javax.swing.JButton xpathButton;
    private javax.swing.JTextField xqueryField;
    // End of variables declaration//GEN-END:variables
    
}
