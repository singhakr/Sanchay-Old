/*
 * FileExplorerJPanel.java
 *
 * Created on May 16, 2006, 4:27 PM
 */

package sanchay.gui.common;

import java.awt.Component;
import java.io.File;
import java.awt.Frame;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JMenuBar;
import javax.swing.JPopupMenu;
import javax.swing.JToolBar;
import javax.swing.tree.*;

import sanchay.GlobalProperties;
import sanchay.tree.*;
import sanchay.tree.gui.*;
import sanchay.common.types.ClientType;

/**
 *
 * @author  anil
 */
public class FileExplorerJPanel extends AdapterTreeJPanel implements JPanelDialog, sanchay.gui.clients.SanchayClient {

    protected ClientType clientType = ClientType.LANGUAGE_ENCODING_IDENTIFIER;

    protected JFrame owner;
    protected JDialog dialog;
    protected Component parentComponent;
    
    protected FileDisplayer fileDisplayer;
    
    protected String langEnc = GlobalProperties.getIntlString("hin::utf8");
    protected String title = "";

    protected String charset;
    
    protected File rootFile = null;
    
    /** Creates new form FileExplorerJPanel */

    public FileExplorerJPanel(FileDisplayer fDisplayer, File rFile) {
        this();

        this.fileDisplayer = fDisplayer;
        
        this.rootFile = rFile;
    }

    public FileExplorerJPanel(FileDisplayer fDisplayer) {
        this();
    }
    
    private FileExplorerJPanel()
    {
	initComponents();

        parentComponent = this;
	
	charset = GlobalProperties.getIntlString("UTF-8");
	this.fileDisplayer = fileDisplayer;
	
        getJTree().addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

	getJTree().addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                formKeyTyped(evt);
            }
        });
        
        createTreeModel();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 300, Short.MAX_VALUE)
        );
    }
    // </editor-fold>//GEN-END:initComponents

    public ClientType getClientType()
    {
        return clientType;
    }
    
    private void formMouseClicked(java.awt.event.MouseEvent evt) {
// TODO add your handling code here:
	if(evt.getClickCount() == 2)
	{
	    TreePath currentSelection = getJTree().getSelectionPath();

	    if (currentSelection != null) 
	    {
		FileNode selectedNode = (FileNode) (currentSelection.getLastPathComponent());

		if(fileDisplayer.closeFile(evt))
		    fileDisplayer.displayFile((File) selectedNode.getUserObject(), charset, evt);
	    }
	}
    }

    private void formKeyTyped(java.awt.event.KeyEvent evt) {
    // TODO add your handling code here:
	if(evt.getKeyChar() == '\n')
	{
	    TreePath currentSelection = getJTree().getSelectionPath();

	    if (currentSelection != null) 
	    {
		FileNode selectedNode = (FileNode) (currentSelection.getLastPathComponent());

		fileDisplayer.displayFile((File) selectedNode.getUserObject(), charset, evt);
	    }
	}
    }

    @Override
     public TreeModel createTreeModel() {
//	SwingComponentNode rootNode = new SwingComponentNode(rightCenter);
//	rootNode.explore();
//	return new DefaultTreeModel(rootNode);

        FileNode rootNode = null;

        TreeModel treeModel = null;

        if(this.getClass().equals(FileExplorerJPanel.class))
        {
            rootFile = new File("/");
            
            rootNode = FileNode.getFileNodeInstance(rootFile);
            rootNode.explore();

            treeModel = new DefaultTreeModel(rootNode);
        }

        tree.setModel(treeModel);
//        
//        if(!remote)
//        {
//           rootNode.explore();
//        }

	return treeModel;
    }

    public String getLangEnc()
    {
        return langEnc;
    }

    public Frame getOwner() {
        return owner;
    }

    public void setOwner(Frame frame) {
        owner = (JFrame) frame;
    }

    public void setParentComponent(Component parentComponent)
    {
        this.parentComponent = parentComponent;
    }

    public void setDialog(JDialog dialog) {
        this.dialog=dialog;
        
    }

    public String getTitle() {
        return title;
    }

    public JMenuBar getJMenuBar() {
        return null;
    }

    public JPopupMenu getJPopupMenu() {
        return null;
    }

    public JToolBar getJToolBar() {
        return null;
    }
    
    public void setRootFile(File rfile)
    {
        rootFile = rfile;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    
}
