/*
 * FileSelectionJPanel.java
 *
 * Created on August 13, 2007, 2:37 AM
 */

package sanchay.gui.common;

import java.io.File;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import sanchay.GlobalProperties;

/**
 *
 * @author  anil
 */
public class FileSelectionJPanel extends javax.swing.JPanel implements JPanelDialog
{
    protected JFrame owner;
    protected JDialog dialog;
    
    protected DefaultListModel selectedFiles;

    protected File currentDir;
    
    /** Creates new form FileSelectionJPanel */
    public FileSelectionJPanel() {
        initComponents();
        
        selectedFiles = new DefaultListModel();
        selectedFilesJList.setModel(selectedFiles);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selectedFilesJScrollPane = new javax.swing.JScrollPane();
        selectedFilesJList = new javax.swing.JList();
        manageFilesJPanel = new javax.swing.JPanel();
        addFilesJButton = new javax.swing.JButton();
        removeFilesJButton = new javax.swing.JButton();
        clearAllJButton = new javax.swing.JButton();
        commandsJPanel = new javax.swing.JPanel();
        OKJButton = new javax.swing.JButton();
        CancelJButton = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        selectedFilesJScrollPane.setViewportView(selectedFilesJList);

        add(selectedFilesJScrollPane, java.awt.BorderLayout.CENTER);

        manageFilesJPanel.setLayout(new java.awt.GridLayout(0, 1, 0, 4));

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("sanchay"); // NOI18N
        addFilesJButton.setText(bundle.getString("Add")); // NOI18N
        addFilesJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFilesJButtonActionPerformed(evt);
            }
        });
        manageFilesJPanel.add(addFilesJButton);

        removeFilesJButton.setText(bundle.getString("Remove")); // NOI18N
        removeFilesJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeFilesJButtonActionPerformed(evt);
            }
        });
        manageFilesJPanel.add(removeFilesJButton);

        clearAllJButton.setText(bundle.getString("Clear")); // NOI18N
        clearAllJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearAllJButtonActionPerformed(evt);
            }
        });
        manageFilesJPanel.add(clearAllJButton);

        add(manageFilesJPanel, java.awt.BorderLayout.EAST);

        OKJButton.setText(bundle.getString("OK")); // NOI18N
        OKJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKJButtonActionPerformed(evt);
            }
        });
        commandsJPanel.add(OKJButton);

        CancelJButton.setText(bundle.getString("Cancel")); // NOI18N
        CancelJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelJButtonActionPerformed(evt);
            }
        });
        commandsJPanel.add(CancelJButton);

        add(commandsJPanel, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    private void CancelJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelJButtonActionPerformed
// TODO add your handling code here:
        selectedFiles.removeAllElements();
        
        if(dialog != null)
            dialog.setVisible(false);        
    }//GEN-LAST:event_CancelJButtonActionPerformed

    private void OKJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKJButtonActionPerformed
// TODO add your handling code here:
        if(dialog != null)
            dialog.setVisible(false);        
    }//GEN-LAST:event_OKJButtonActionPerformed

    private void clearAllJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearAllJButtonActionPerformed
// TODO add your handling code here:
        selectedFiles.removeAllElements();
    }//GEN-LAST:event_clearAllJButtonActionPerformed

    private void removeFilesJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeFilesJButtonActionPerformed
// TODO add your handling code here:
        int selIndices[] = selectedFilesJList.getSelectedIndices();
        
        for (int i = 0; i < selIndices.length; i++) {
            selectedFiles.removeElementAt(selIndices[i] - i);
        }
    }//GEN-LAST:event_removeFilesJButtonActionPerformed

    private void addFilesJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFilesJButtonActionPerformed
// TODO add your handling code here:
        JFileChooser chooser = new JFileChooser(currentDir);
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        chooser.setMultiSelectionEnabled(true);
        
        int returnVal = chooser.showOpenDialog(this);
        if(returnVal == JFileChooser.APPROVE_OPTION) {
            File selFiles[] = chooser.getSelectedFiles();
            
            for (int i = 0; i < selFiles.length; i++) {
                File selectedFile = (File) selFiles[i];
                
                //           if(validateFilePath(taskPropSchema).equals("") == false)
                //           {
                selectedFiles.addElement(selectedFile);
                //           }
            }
        }
    }//GEN-LAST:event_addFilesJButtonActionPerformed

    /**
     * @return the currentDir
     */
    public File getCurrentDir() {
        return currentDir;
    }

    /**
     * @param currentDir the currentDir to set
     */
    public void setCurrentDir(File currentDir) {
        this.currentDir = currentDir;
    }
    
    public Object[] getSelectedFiles()
    {
        return selectedFiles.toArray();
    }
    
    public File[] getSelectedFilesExt()
    {
        int fcount = selectedFiles.getSize();
        
        File files[] = new File[fcount];
        
        for (int i = 0; i < fcount; i++)
        {
            files[i] = (File) selectedFiles.getElementAt(i);
        }

        return files;
    }
   
    private static void createAndShowGUI() {
        //Make sure we have nice window decorations.
        JFrame.setDefaultLookAndFeelDecorated(true);

        //Create and set up the window.
        JFrame frame = new JFrame(GlobalProperties.getIntlString("Select_Multiple_Files"));
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	
	DialogFactory.showDialog(FileSelectionJPanel.class, frame, "FileSelectionJPanel", true);
	frame.setVisible(true);
    }

    public static void main(String[] args) {
        //Schedule a job for the event-dispatching thread:
        //creating and showing this application's GUI.
        javax.swing.SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                createAndShowGUI();
            }
        });
    }
    
    public void setDialog(JDialog dialog) {
	this.dialog = dialog;
    }    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelJButton;
    private javax.swing.JButton OKJButton;
    private javax.swing.JButton addFilesJButton;
    private javax.swing.JButton clearAllJButton;
    private javax.swing.JPanel commandsJPanel;
    private javax.swing.JPanel manageFilesJPanel;
    private javax.swing.JButton removeFilesJButton;
    private javax.swing.JList selectedFilesJList;
    private javax.swing.JScrollPane selectedFilesJScrollPane;
    // End of variables declaration//GEN-END:variables
    
}
