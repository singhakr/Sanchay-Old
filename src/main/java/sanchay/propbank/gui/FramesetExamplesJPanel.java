/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FramesetExamplesJPanel.java
 *
 * Created on 16 Sep, 2009, 6:58:42 AM
 */

package sanchay.propbank.gui;

import java.awt.Frame;
import java.awt.event.MouseListener;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.util.EventObject;
import javax.swing.Action;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JMenuItem;
import sanchay.GlobalProperties;
import sanchay.gui.common.JPanelDialog;
import sanchay.gui.common.PopupListener;
import sanchay.propbank.FramesetExample;
import sanchay.propbank.FramesetRoleset;
import sanchay.propbank.gui.FramesetExampleJPanel;

/**
 *
 * @author anil
 */
public class FramesetExamplesJPanel extends javax.swing.JPanel implements WindowListener, JPanelDialog {

    protected JFrame owner;
    protected JDialog dialog;

    protected FramesetRoleset roleset;

    protected String langEnc = GlobalProperties.getIntlString("hin::utf8");

    protected boolean commands[];
    protected Action actions[];

    protected MouseListener popupListener;

    /** Creates new form FramesetExamplesJPanel */
    public FramesetExamplesJPanel(String langEnc) {
        initComponents();

        this.langEnc = langEnc;

        popupListener = new PopupListener(editorJPopupMenu);
        addMouseListener(popupListener);
        framesetExamplesJTabbedPane.addMouseListener(popupListener);

        prepareCommands(null);
    }

    private void prepareCommands(int appliedCommands[]) {
        commands = new boolean[FramesetExampleAction._ACTIONS_];
        actions = new Action[FramesetExampleAction._ACTIONS_];

        // Basic action commands
        for(int i = 0; i < commands.length; i++) {
            commands[i] = true;
            actions[i] = FramesetExampleAction.createAction(this, i);
        }

//        Font btnFont = new Font("Dialog", Font.PLAIN, 11);
//        Font btnFont = getFont().deriveFont(Font.PLAIN, 10);

        if(appliedCommands != null) {
            for(int i = 0; i < commands.length; i++)
                commands[i] = false;

            for(int i = 0; i < appliedCommands.length; i++) {
                int cmd = appliedCommands[i];
                commands[cmd] = true;

                JMenuItem mi = new JMenuItem();
                mi.setAction(actions[cmd]);
                editorJPopupMenu.add(mi);
            }
        } else {
            for(int i = 0; i < commands.length; i++) {
                JMenuItem mi = new JMenuItem();
                mi.setAction(actions[i]);
                editorJPopupMenu.add(mi);
            }
        }

//        InputMap inputMap = getInputMap();
//
//        //Ctrl+s to save
//        KeyStroke key = KeyStroke.getKeyStroke(KeyEvent.VK_S, Event.CTRL_MASK);
//        inputMap.put(key, actions[FramesetAction.SAVE]);
//
//        //Ctrl+o to open
//        key = KeyStroke.getKeyStroke(KeyEvent.VK_O, Event.CTRL_MASK);
//        inputMap.put(key, actions[FramesetAction.OPEN]);
//
//        //Ctrl+w to close
//        key = KeyStroke.getKeyStroke(KeyEvent.VK_W, Event.CTRL_MASK);
//        inputMap.put(key, actions[FramesetAction.CLOSE]);
//
//        //Ctrl+i to select input method
//        key = KeyStroke.getKeyStroke(KeyEvent.VK_I, Event.CTRL_MASK);
//        inputMap.put(key, actions[FramesetAction.SELECT_INPUT_METHOD]);
//
//        //Ctrl+Shift+L to select language
//        key = KeyStroke.getKeyStroke(KeyEvent.VK_L, Event.CTRL_MASK | Event.SHIFT_MASK);
//        inputMap.put(key, actions[FramesetAction.SELECT_LANGUAGE]);
//
//        //Ctrl+Shift+E to select encoding
//        key = KeyStroke.getKeyStroke(KeyEvent.VK_E, Event.CTRL_MASK | Event.SHIFT_MASK);
//        inputMap.put(key, actions[FramesetAction.SELECT_ENCODING]);
    }

    /**
     * @return the roleset
     */
    public FramesetRoleset getRoleset()
    {
        return roleset;
    }

    /**
     * @param roleset the roleset to set
     */
    public void setRoleset(FramesetRoleset roleset)
    {
        this.roleset = roleset;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        editorJPopupMenu = new javax.swing.JPopupMenu();
        framesetExamplesJTabbedPane = new javax.swing.JTabbedPane();

        setLayout(new java.awt.BorderLayout());
        add(framesetExamplesJTabbedPane, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    public void init()
    {
        int count = getRoleset().countExamples();

        for (int i = 0; i < count; i++)
        {
            FramesetExample example = getRoleset().getExample(i);

            FramesetExampleJPanel framesetExampleJPanel = new FramesetExampleJPanel(langEnc);

            int tcount = framesetExamplesJTabbedPane.getTabCount();

            framesetExamplesJTabbedPane.add("" + (tcount + 1), framesetExampleJPanel);

            framesetExampleJPanel.setExample(example);

            framesetExampleJPanel.addMouseListener(popupListener);
            framesetExampleJPanel.addPopupListener(popupListener);

            framesetExampleJPanel.init();
        }
    }

    public void addExample(EventObject e) {
        FramesetExample example = new FramesetExample();

        getRoleset().addExample(example);

        FramesetExampleJPanel framesetExampleJPanel = new FramesetExampleJPanel(langEnc);
        framesetExampleJPanel.setExample(example);

        framesetExampleJPanel.addMouseListener(popupListener);
        framesetExampleJPanel.addPopupListener(popupListener);
        
        framesetExampleJPanel.init();

        int tcount = framesetExamplesJTabbedPane.getTabCount();

        framesetExamplesJTabbedPane.add("" + (tcount + 1), framesetExampleJPanel);
    }

    public void removeExample(EventObject e) {
        if(framesetExamplesJTabbedPane.getTabCount() == 0)
            return;

        FramesetExampleJPanel framesetExampleJPanel = (FramesetExampleJPanel) framesetExamplesJTabbedPane.getSelectedComponent();
        FramesetExample example = framesetExampleJPanel.getExample();
        getRoleset().removeExample(example);
        framesetExamplesJTabbedPane.remove(framesetExampleJPanel);
    }

    public void addArgument(EventObject e) {
        FramesetExampleJPanel framesetExampleJPanel = (FramesetExampleJPanel) framesetExamplesJTabbedPane.getSelectedComponent();
       
        framesetExampleJPanel.addArgument(e);
    }

    public void addRelation(EventObject e) {
        FramesetExampleJPanel framesetExampleJPanel = (FramesetExampleJPanel) framesetExamplesJTabbedPane.getSelectedComponent();
        framesetExampleJPanel.addRelation(e);
    }

    @Override
    public void windowOpened(WindowEvent e)
    {
    }

    @Override
    public void windowClosing(WindowEvent e)
    {
    }

    @Override
    public void windowClosed(WindowEvent e)
    {
    }

    @Override
    public void windowIconified(WindowEvent e)
    {
    }

    @Override
    public void windowDeiconified(WindowEvent e)
    {
    }

    @Override
    public void windowActivated(WindowEvent e)
    {
    }

    @Override
    public void windowDeactivated(WindowEvent e)
    {
    }

    @Override
    public void setDialog(JDialog dialog)
    {
        this.dialog = dialog;
    }

    public void setOwner(Frame frame)
    {
        owner = (JFrame) frame;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPopupMenu editorJPopupMenu;
    private javax.swing.JTabbedPane framesetExamplesJTabbedPane;
    // End of variables declaration//GEN-END:variables

}
