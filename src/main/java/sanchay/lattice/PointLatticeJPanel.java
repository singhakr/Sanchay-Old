/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PointLatticeVisualizerJPanel.java
 *
 * Created on 13 Jul, 2009, 10:58:52 PM
 */
package sanchay.lattice;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Toolkit;
import javax.swing.BorderFactory;
import javax.swing.DefaultCellEditor;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JMenuBar;
import javax.swing.JPopupMenu;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.JToolBar;
import sanchay.GlobalProperties;
import sanchay.gui.clients.SanchayClient;
import sanchay.gui.common.ExitListener;
import sanchay.table.gui.SanchayJTable;
import sanchay.tree.SanchayEdges;
import sanchay.util.UtilityFunctions;
import sanchay.common.types.ClientType;

/**
 *
 * @author Anil Kumar Singh
 */
public class PointLatticeJPanel extends javax.swing.JPanel implements SanchayClient, sanchay.gui.common.JPanelDialog
{
    protected ClientType clientType = ClientType.LANGUAGE_ENCODING_IDENTIFIER;

    protected JFrame owner;
    protected JDialog dialog;
    protected Component parentComponent;

    protected String title = "";

    protected String langEnc = GlobalProperties.getIntlString("hin::utf8");
    protected String charset = GlobalProperties.getIntlString("UTF-8");
    
    protected PointLattice pointLattice;

    protected SanchayJTable tableJTable;

    /** Creates new form PointLatticeVisualizerJPanel */
    public PointLatticeJPanel()
    {
        initComponents();

        pointLattice = new PointLattice();

        pointLattice.makeLattice("गहिर", PointLattice.PHONETIC_SPACE_MODE);
//        pointLattice.makeLattice("खतरनाक", PointLattice.PHONETIC_SPACE_MODE);

        tableJTable = new SanchayJTable(pointLattice.getGrid(), 5, pointLattice);

        JScrollPane tableScrollPane = new JScrollPane(tableJTable);
        tableScrollPane.setPreferredSize(new Dimension(300, 250));
        tableScrollPane.setViewportBorder(BorderFactory.createLineBorder(Color.black));

        gridJPanel.add(tableScrollPane, BorderLayout.CENTER);
        setBorder(BorderFactory.createEmptyBorder(20,20,20,20));

        UtilityFunctions.setComponentFont(tableJTable, langEnc);
//        tableJTable.setFont(new java.awt.Font("Dialog", 1, 14));

        tableJTable.setRowHeight(80);
        tableJTable.getColumnModel().setColumnMargin(50);
        tableJTable.setShowHorizontalLines(false);
        tableJTable.setShowVerticalLines(false);
//        tableJTable.setIntercellSpacing(new java.awt.Dimension(5, 50));

        tableJTable.setCellSelectionEnabled(true);
        tableJTable.firePropertyChange("cellSelectionEnabled", false, true);
        tableJTable.setRowSelectionAllowed(true);
        tableJTable.firePropertyChange("rowSelectionAllowed", false, true);
        tableJTable.setColumnSelectionAllowed(true);
        tableJTable.firePropertyChange("columnSelectionAllowed", false, true);

        JTextField ed = new JTextField();
        ed.setEditable(true);
        ed.setHorizontalAlignment(JTextField.CENTER);
        DefaultCellEditor dced = new DefaultCellEditor(ed);
        tableJTable.setDefaultEditor(String.class, dced);

        UtilityFunctions.fitColumnsToContent(tableJTable, 100);

        SanchayEdges edges = pointLattice.getEdges();

        int count = edges.countEdges();

        for (int i = 0; i < count; i++)
        {
            tableJTable.addEdge(edges.getEdge(i));
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gridJPanel = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        gridJPanel.setLayout(new java.awt.BorderLayout());
        add(gridJPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    public ClientType getClientType()
    {
        return clientType;
    }

    /**
     * @return the langEnc
     */
    public String getLangEnc()
    {
        return langEnc;
    }

    /**
     * @param langEnc the langEnc to set
     */
    public void setLangEnc(String langEnc)
    {
        this.langEnc = langEnc;
    }

    /**
     * @return the charset
     */
    public String getCharset()
    {
        return charset;
    }

    /**
     * @param charset the charset to set
     */
    public void setCharset(String charset)
    {
        this.charset = charset;
    }

    public Frame getOwner()
    {
        return owner;
    }

    public void setOwner(Frame f)
    {
        owner = (JFrame) f;
    }

    public void setDialog(JDialog d)
    {
        dialog = d;
    }

    public void setParentComponent(Component parentComponent)
    {
        this.parentComponent = parentComponent;
    }

    public String getTitle()
    {
        return title;
    }

    public JMenuBar getJMenuBar()
    {
        return null;
    }

    public JPopupMenu getJPopupMenu()
    {
        return null;
    }

    public JToolBar getJToolBar()
    {
        return null;
    }

    /**
     * Create the GUI and show it.  For thread safety,
     * this method should be invoked from the
     * event-dispatching thread.
     */
    private static void createAndShowGUI()
    {
        //Make sure we have nice window decorations.
        JFrame.setDefaultLookAndFeelDecorated(true);

        //Create and set up the window.
        JFrame frame = new JFrame(GlobalProperties.getIntlString("Sanchay_Find_Replace_Tool"));
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.addWindowListener(new ExitListener());

        //Create and set up the content pane.
        PointLatticeJPanel newContentPane = new PointLatticeJPanel();
        newContentPane.setOpaque(true); //content panes must be opaque
        frame.setContentPane(newContentPane);
        newContentPane.setOwner(frame);

        //Display the window.
        frame.pack();

        int inset = 5;
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        frame.setBounds(inset, inset,
                screenSize.width - inset * 2,
                screenSize.height - inset * 9);

        frame.setVisible(true);
    }

    public static void main(String[] args)
    {
        //Schedule a job for the event-dispatching thread:
        //creating and showing this application's GUI.
        javax.swing.SwingUtilities.invokeLater(new Runnable()
        {

            public void run()
            {
                createAndShowGUI();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel gridJPanel;
    // End of variables declaration//GEN-END:variables
}
