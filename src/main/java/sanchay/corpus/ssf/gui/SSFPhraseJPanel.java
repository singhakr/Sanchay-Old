/*
 * SSFPhraseJPanel.java
 *
 * Created on October 9, 2005, 9:52 PM
 */

package sanchay.corpus.ssf.gui;

import java.util.*;
import javax.swing.*;
import javax.swing.tree.*;

import sanchay.GlobalProperties;
import sanchay.gui.*;
import sanchay.tree.*;
import sanchay.table.*;
import sanchay.tree.gui.*;
import sanchay.corpus.ssf.tree.*;
import sanchay.corpus.ssf.features.impl.*;
import sanchay.tree.gui.action.TreeAction;
import sanchay.properties.gui.*;

/**
 *
 * @author  anil
 */
public class SSFPhraseJPanel extends javax.swing.JPanel
        implements DataStructureJPanelInterface {

    private JFrame owner;
    private JDialog dialog;
    
    private SanchayTreeJPanel sanchayTreeJPanel;
    private JPanel featureStructureJPanel;

    private SSFPhrase ssfPhrase;
    
    private static ImageIcon phraseOpenIcon;
    private static ImageIcon phraseClosedIcon;
    private static ImageIcon lexItemIcon;
    
    private boolean nestedFS;
    
    /** Creates new form SSFPhraseJPanel */
    public SSFPhraseJPanel(SSFPhrase ssp, boolean nestFS) {

        ssfPhrase = ssp;

        try
        {
            phraseOpenIcon =  new ImageIcon(GlobalProperties.getHomeDirectory() + "/" + "images/color2-right.png");
            phraseClosedIcon =  new ImageIcon(GlobalProperties.getHomeDirectory() + "/" + "images/color2-up.png");
            lexItemIcon =  new ImageIcon(GlobalProperties.getHomeDirectory() + "/" + "images/color7-right.png");
        }
        catch(Exception e)
        {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this,GlobalProperties.getIntlString("Error_in_loading_files."),GlobalProperties.getIntlString("Error"), JOptionPane.ERROR_MESSAGE);
        }

        initComponents();
        
        int cmds[] = new int[2];
//        cmds[0] = SanchayTreeJPanel.COMBINE_NODES;
//        cmds[1] = SanchayTreeJPanel.DEL_LAYER_CMD;
        cmds[0] = TreeAction.EXPAND_ALL;
        cmds[1] = TreeAction.COLLAPSE_ALL;
        
        SanchayTreeModel sanchayTreeModel = new SanchayTreeModel(ssp);
//        sanchayTreeJPanel = new SanchayTreeJPanel(sanchayTreeModel,
//                new SSFTreeCellRenderer(), cmds, SanchayTreeJPanel.SSF_MODE);
//        leftJPanel.add(sanchayTreeJPanel, java.awt.BorderLayout.CENTER);
        
        nestedFS = nestFS;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        leftJPanel = new javax.swing.JPanel();
        commandsJPanel = new javax.swing.JPanel();
        formPhraseJButton = new javax.swing.JButton();
        removePhraseJButton = new javax.swing.JButton();
        comboBoxJPanel = new javax.swing.JPanel();
        posTagJLabel = new javax.swing.JLabel();
        posTagJComboBox = new javax.swing.JComboBox();
        phraseNameJLabel = new javax.swing.JLabel();
        phraseNameJComboBox = new javax.swing.JComboBox();
        fsCommandsJPanel = new javax.swing.JPanel();
        nestedFSJCheckBox = new javax.swing.JCheckBox();
        editFSJButton = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        leftJPanel.setLayout(new java.awt.BorderLayout());
        add(leftJPanel, java.awt.BorderLayout.CENTER);

        commandsJPanel.setLayout(new java.awt.GridLayout(4, 0, 0, 4));

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("sanchay"); // NOI18N
        formPhraseJButton.setText(bundle.getString("Form_Phrase")); // NOI18N
        formPhraseJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formPhraseJButtonActionPerformed(evt);
            }
        });
        commandsJPanel.add(formPhraseJButton);

        removePhraseJButton.setText(bundle.getString("Remove_Phrase")); // NOI18N
        removePhraseJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removePhraseJButtonActionPerformed(evt);
            }
        });
        commandsJPanel.add(removePhraseJButton);

        comboBoxJPanel.setLayout(new java.awt.GridLayout(4, 0, 0, 4));

        posTagJLabel.setLabelFor(posTagJComboBox);
        posTagJLabel.setText(bundle.getString("POS_Tag:")); // NOI18N
        comboBoxJPanel.add(posTagJLabel);

        posTagJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        posTagJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                posTagJComboBoxActionPerformed(evt);
            }
        });
        comboBoxJPanel.add(posTagJComboBox);

        phraseNameJLabel.setLabelFor(phraseNameJComboBox);
        phraseNameJLabel.setText(bundle.getString("Phrase_Name:")); // NOI18N
        comboBoxJPanel.add(phraseNameJLabel);

        phraseNameJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        phraseNameJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phraseNameJComboBoxActionPerformed(evt);
            }
        });
        comboBoxJPanel.add(phraseNameJComboBox);

        commandsJPanel.add(comboBoxJPanel);

        fsCommandsJPanel.setLayout(new java.awt.BorderLayout(0, 4));

        nestedFSJCheckBox.setText(bundle.getString("Nested_FS")); // NOI18N
        nestedFSJCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        nestedFSJCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        nestedFSJCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nestedFSJCheckBoxActionPerformed(evt);
            }
        });
        fsCommandsJPanel.add(nestedFSJCheckBox, java.awt.BorderLayout.NORTH);

        editFSJButton.setText(bundle.getString("Edit_FS")); // NOI18N
        editFSJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editFSJButtonActionPerformed(evt);
            }
        });
        fsCommandsJPanel.add(editFSJButton, java.awt.BorderLayout.CENTER);

        commandsJPanel.add(fsCommandsJPanel);

        add(commandsJPanel, java.awt.BorderLayout.EAST);
    }// </editor-fold>//GEN-END:initComponents

    private void nestedFSJCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nestedFSJCheckBoxActionPerformed
// TODO add your handling code here:
        if(nestedFS == true)
            nestedFS = false;
        else
            nestedFS = true;
    }//GEN-LAST:event_nestedFSJCheckBoxActionPerformed

    private void phraseNameJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phraseNameJComboBoxActionPerformed
// TODO add your handling code here:
        JTree jtree = sanchayTreeJPanel.getJTree();
        TreePath currentSelection = jtree.getSelectionPath();
        if (currentSelection != null) 
        {
            SSFNode currentNode = (SSFNode) (currentSelection.getLastPathComponent());
            
            if(currentNode.isLeafNode() == true)
            {
                JOptionPane.showMessageDialog(this,GlobalProperties.getIntlString("The_node_you_have_selected_is_a_lexical_item,_not_a_phrase."),GlobalProperties.getIntlString("Error"), JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            String selItem = (String) phraseNameJComboBox.getSelectedItem();
            
            MutableTreeNode parent = (MutableTreeNode)(currentNode.getParent());
            if(parent != null)
            {
                currentNode.setName(selItem);
                getModel().reload(parent);
                sanchayTreeJPanel.expandAll(null);
            }
        }
        else
            JOptionPane.showMessageDialog(this,GlobalProperties.getIntlString("You_did_not_select_a_node."),GlobalProperties.getIntlString("Error"), JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_phraseNameJComboBoxActionPerformed

    private void posTagJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_posTagJComboBoxActionPerformed
// TODO add your handling code here:
        JTree jtree = sanchayTreeJPanel.getJTree();
        TreePath currentSelection = jtree.getSelectionPath();
        if (currentSelection != null) 
        {
            SSFNode currentNode = (SSFNode) (currentSelection.getLastPathComponent());
            
            if(currentNode.isLeafNode() == false)
            {
                JOptionPane.showMessageDialog(this,GlobalProperties.getIntlString("The_node_you_have_selected_is_a_phrase,_not_a_lexical_item."),GlobalProperties.getIntlString("Error"), JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            String selItem = (String) posTagJComboBox.getSelectedItem();
            
            MutableTreeNode parent = (MutableTreeNode)(currentNode.getParent());
            if(parent != null)
            {
                currentNode.setName(selItem);
                getModel().reload(parent);
                sanchayTreeJPanel.expandAll(null);
            }
        } 
        else
            JOptionPane.showMessageDialog(this,GlobalProperties.getIntlString("You_did_not_select_a_node."),GlobalProperties.getIntlString("Error"), JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_posTagJComboBoxActionPerformed

    private void removePhraseJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removePhraseJButtonActionPerformed
// TODO add your handling code here:
        JTree jtree = sanchayTreeJPanel.getJTree();
        TreePath currentSelection = jtree.getSelectionPath();
        if (currentSelection != null) 
        {
            SSFNode currentNode = (SSFNode) (currentSelection.getLastPathComponent());
            
            if(currentNode.isLeafNode() == true)
            {
                JOptionPane.showMessageDialog(this,GlobalProperties.getIntlString("The_node_you_have_selected_is_a_lexical_item,_not_a_phrase."),GlobalProperties.getIntlString("Error"), JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            MutableTreeNode parent = (MutableTreeNode)(currentNode.getParent());
            if(parent != null)
            {
                currentNode.removeLayer();
                getModel().reload(parent);
                sanchayTreeJPanel.expandAll(null);
            }
        } 
        else
            JOptionPane.showMessageDialog(this,GlobalProperties.getIntlString("You_did_not_select_a_node."),GlobalProperties.getIntlString("Error"), JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_removePhraseJButtonActionPerformed

    private void editFSJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editFSJButtonActionPerformed
// TODO add your handling code here:
        JTree jtree = sanchayTreeJPanel.getJTree();
        TreePath currentSelection = jtree.getSelectionPath();
        if (currentSelection != null) 
        {
            SanchayMutableTreeNode currentNode = (SanchayMutableTreeNode) (currentSelection.getLastPathComponent());
            FeatureStructuresImpl fss = (FeatureStructuresImpl) ((SSFNode) currentNode).getFeatureStructures();
            
            MutableTreeNode parent = (MutableTreeNode)(currentNode.getParent());
            if(parent != null)
            {
                JDialog taskDialog = new JDialog(this.getOwner(), GlobalProperties.getIntlString("Feature_Structures_Editor"), true);

                if(nestedFS == true)
                {
                    featureStructureJPanel = new FeatureStructureJPanel(fss);
                }
                else
                {
	            SanchayTableModel table = fss.getAltFSValue(0).getFeatureTable();
                    featureStructureJPanel = new TKVPropertiesJPanel(table, false, null);
                }

                ((FeatureStructureJPanel) featureStructureJPanel).setOwner(this.getOwner());
                ((FeatureStructureJPanel) featureStructureJPanel).setDialog(taskDialog);

                taskDialog.add(featureStructureJPanel);
                taskDialog.setBounds(280, 180, 500, 400);

                if(nestedFS == true)
                    ((FeatureStructureJPanel) featureStructureJPanel).getSanchayTreeJPanel().expandAll(null);
		
                taskDialog.setVisible(true);

                getModel().reload(parent);
                sanchayTreeJPanel.expandAll(null);
            }
        } 
        else
            JOptionPane.showMessageDialog(this,GlobalProperties.getIntlString("You_did_not_select_a_node."),GlobalProperties.getIntlString("Error"), JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_editFSJButtonActionPerformed

    private void formPhraseJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formPhraseJButtonActionPerformed
// TODO add your handling code here:
        JTree jtree = sanchayTreeJPanel.getJTree();
    	TreePath currentSelection[] = jtree.getSelectionPaths();
        
        if(currentSelection == null || currentSelection.length <= 0)
        {
            JOptionPane.showMessageDialog(this,GlobalProperties.getIntlString("You_did_not_select_nodes."),GlobalProperties.getIntlString("Error"), JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        SSFNode firstNode = (SSFNode) (currentSelection[0].getLastPathComponent());
        SSFPhrase parent = (SSFPhrase) (firstNode.getParent());

        int fromChild = parent.findChild(firstNode);
        int count = currentSelection.length;
        
        for(int i = 1; i < count; i++)
    	{
            if(currentSelection[0].getParentPath() != currentSelection[i].getParentPath())
            {
                JOptionPane.showMessageDialog(this, GlobalProperties.getIntlString("Wrong_selection_for_forming_a_phrase."), GlobalProperties.getIntlString("Error"), JOptionPane.ERROR_MESSAGE);
                return;
            }
    	}

        int indices[] = new int[count];
        
        for(int i = 0; i < count; i++)
    	{
            SSFNode node = (SSFNode) (currentSelection[i].getLastPathComponent());
            indices[i] = parent.findChild(node);
            
            if(i > 0 && indices[i] != indices[i - 1] + 1)
            {
                JOptionPane.showMessageDialog(this, GlobalProperties.getIntlString("Wrong_selection_for_forming_a_phrase."), GlobalProperties.getIntlString("Error"), JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        try {
            parent.formPhrase(indices[0], currentSelection.length);
        } catch (Exception ex) {
            ex.printStackTrace();
        }

        getModel().reload(parent);
        sanchayTreeJPanel.expandAll(null);
    }//GEN-LAST:event_formPhraseJButtonActionPerformed
    
    public static ImageIcon getPhraseOpenIcon()
    {
        return phraseOpenIcon;
    }
    
    public static ImageIcon getPhraseClosedIcon()
    {
        return phraseClosedIcon;
    }
    
    public static ImageIcon getLexItemIcon()
    {
        return lexItemIcon;
    }
    
    public JFrame getOwner()
    {
        return owner;
    }
    
    public void setOwner(JFrame f)
    {
        owner = f;
    }
    
    public void setDialog(JDialog d)
    {
        dialog = d;
    }

    public SanchayTreeModel getModel()
    {
        return (SanchayTreeModel) sanchayTreeJPanel.getModel();
    }
    
    public void setModel(SanchayTreeModel tm)
    {
        sanchayTreeJPanel.setModel(tm);
    }

    public Vector getPOSTags()
    {
        int count = posTagJComboBox.getItemCount();
        Vector ret = new Vector(count);
        
        for(int i = 0; i < count;  i++)
            ret.add(posTagJComboBox.getItemAt(i));
        
        return ret;
    }
    
    public void setPOSTags(Vector posTags)
    {
        posTagJComboBox.setModel(new DefaultComboBoxModel(posTags));
    }

    public Vector getPhraseNames()
    {
        int count = phraseNameJComboBox.getItemCount();
        Vector ret = new Vector(count);
        
        for(int i = 0; i < count;  i++)
            ret.add(phraseNameJComboBox.getItemAt(i));
        
        return ret;
    }
    
    public void setPhraseNames(Vector phraseNames)
    {
        phraseNameJComboBox.setModel(new DefaultComboBoxModel(phraseNames));
    }
    
    public SanchayTreeJPanel getSanchayTreeJPanel()
    {
        return sanchayTreeJPanel;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JPanel comboBoxJPanel;
    public javax.swing.JPanel commandsJPanel;
    public javax.swing.JButton editFSJButton;
    public javax.swing.JButton formPhraseJButton;
    public javax.swing.JPanel fsCommandsJPanel;
    public javax.swing.JPanel leftJPanel;
    public javax.swing.JCheckBox nestedFSJCheckBox;
    public javax.swing.JComboBox phraseNameJComboBox;
    public javax.swing.JLabel phraseNameJLabel;
    public javax.swing.JComboBox posTagJComboBox;
    public javax.swing.JLabel posTagJLabel;
    public javax.swing.JButton removePhraseJButton;
    // End of variables declaration//GEN-END:variables
    
}
