/*
 * SiteListCaptureJPanel.java
 *
 * Created on November 11, 2007, 7:17 AM
 */

package sanchay.corpus.blog;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.Properties;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JMenuBar;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JToolBar;
import org.htmlparser.http.ConnectionManager;
import sanchay.GlobalProperties;
import sanchay.gui.common.JPanelDialog;
import sanchay.table.SanchayTableModel;
import sanchay.table.gui.SanchayTableJPanel;
import sanchay.util.UtilityFunctions;
import sanchay.common.types.ClientType;

/**
 *
 * @author  anil
 */
public class BlogListCaptureJPanel extends javax.swing.JPanel implements WindowListener, JPanelDialog, sanchay.gui.common.ApplicationDescription, sanchay.gui.clients.SanchayClient  {

    protected ClientType clientType = ClientType.LANGUAGE_ENCODING_IDENTIFIER;

    protected JFrame owner;
    protected JDialog dialog;
    protected Component parentComponent;

    protected SanchayTableModel sourcesTableModel;
    protected SanchayTableJPanel sourcesTableJPanel;
    
    protected String sourcesPath;
    protected String targetPath;

    protected String langEnc = "hin::utf8";
    protected String title = "";
    
    protected org.htmlparser.parserapplications.SiteCapturer siteCapturer;
    protected ConnectionManager connectionManager;
       
    /** Creates new form SiteListCaptureJPanel */
    public BlogListCaptureJPanel() {
        initComponents();

        parentComponent = this;
        
        Properties systemSettings = System.getProperties();
        systemSettings.put("http.proxyHost", "192.168.36.204");
        systemSettings.put("http.proxyPort", "8080");
        System.setProperties(systemSettings);        
        
//        connectionManager = new ConnectionManager();
//        connectionManager.setProxyHost("http://192.168.36.204");
//        connectionManager.setProxyPort(8080);
                
        sourcesTableModel = new SanchayTableModel(new String[] {"URL", GlobalProperties.getIntlString("Resource_Capture")}, 0);
        
        sourcesJPanel.remove(0);
        
        sourcesTableJPanel = SanchayTableJPanel.createTableDefaultJPanel(sourcesTableModel, "eng");

        sourcesJPanel.add(sourcesTableJPanel, java.awt.BorderLayout.CENTER);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topJPanel = new javax.swing.JPanel();
        sourceJPanel = new javax.swing.JPanel();
        sourceJLabel = new javax.swing.JLabel();
        sourceJTextField = new javax.swing.JTextField();
        sourceBrowseJButton = new javax.swing.JButton();
        targetJPanel = new javax.swing.JPanel();
        targetJLabel = new javax.swing.JLabel();
        targetJTextField = new javax.swing.JTextField();
        targetBrowseJButton = new javax.swing.JButton();
        sourcesJPanel = new javax.swing.JPanel();
        sourcesJScrollPanel = new javax.swing.JScrollPane();
        sourcesJTable = new javax.swing.JTable();
        commandsJPanel = new javax.swing.JPanel();
        loadSrcJButton = new javax.swing.JButton();
        wordpressJButton = new javax.swing.JButton();
        bloggerJButton = new javax.swing.JButton();
        huffPostJButton = new javax.swing.JButton();
        zdnetTechJButton = new javax.swing.JButton();
        znetJButton = new javax.swing.JButton();
        cancelJButton = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        topJPanel.setLayout(new java.awt.GridLayout(0, 1, 0, 4));

        sourceJPanel.setLayout(new java.awt.BorderLayout());

        sourceJLabel.setText("Source: ");
        sourceJLabel.setToolTipText("The PropertyTokens files from which the URLs have to be loaded");
        sourceJPanel.add(sourceJLabel, java.awt.BorderLayout.WEST);

        sourceJTextField.setToolTipText("The PropertyTokens files from which the URLs have to be loaded");
        sourceJPanel.add(sourceJTextField, java.awt.BorderLayout.CENTER);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("sanchay"); // NOI18N
        sourceBrowseJButton.setText(bundle.getString("Browse")); // NOI18N
        sourceBrowseJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sourceBrowseJButtonActionPerformed(evt);
            }
        });
        sourceJPanel.add(sourceBrowseJButton, java.awt.BorderLayout.EAST);

        topJPanel.add(sourceJPanel);

        targetJPanel.setLayout(new java.awt.BorderLayout());

        targetJLabel.setText(bundle.getString("Target:_")); // NOI18N
        targetJLabel.setToolTipText(bundle.getString("Local_directory_where_the_sites_are_to_be_saved")); // NOI18N
        targetJPanel.add(targetJLabel, java.awt.BorderLayout.WEST);

        targetJTextField.setToolTipText(bundle.getString("Local_directory_where_the_sites_are_to_be_saved")); // NOI18N
        targetJPanel.add(targetJTextField, java.awt.BorderLayout.CENTER);

        targetBrowseJButton.setText(bundle.getString("Browse")); // NOI18N
        targetBrowseJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                targetBrowseJButtonActionPerformed(evt);
            }
        });
        targetJPanel.add(targetBrowseJButton, java.awt.BorderLayout.EAST);

        topJPanel.add(targetJPanel);

        add(topJPanel, java.awt.BorderLayout.NORTH);

        sourcesJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("URLs of the sites to be captured")));
        sourcesJPanel.setLayout(new java.awt.BorderLayout());

        sourcesJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        sourcesJScrollPanel.setViewportView(sourcesJTable);

        sourcesJPanel.add(sourcesJScrollPanel, java.awt.BorderLayout.CENTER);

        add(sourcesJPanel, java.awt.BorderLayout.CENTER);

        commandsJPanel.setLayout(new java.awt.GridLayout(1, 0, 4, 0));

        loadSrcJButton.setText(bundle.getString("Load_Sources")); // NOI18N
        loadSrcJButton.setToolTipText(bundle.getString("Load_the_source_URLs_from_a_PropertyTokens_file")); // NOI18N
        loadSrcJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadSrcJButtonActionPerformed(evt);
            }
        });
        commandsJPanel.add(loadSrcJButton);

        wordpressJButton.setText(bundle.getString("Wordpress")); // NOI18N
        wordpressJButton.setToolTipText(bundle.getString("Capture_the_Wordpress_blogs")); // NOI18N
        wordpressJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wordpressJButtonActionPerformed(evt);
            }
        });
        commandsJPanel.add(wordpressJButton);

        bloggerJButton.setText(bundle.getString("Blogger")); // NOI18N
        bloggerJButton.setToolTipText(bundle.getString("Capture_the_Blogger_blogs")); // NOI18N
        bloggerJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bloggerJButtonActionPerformed(evt);
            }
        });
        commandsJPanel.add(bloggerJButton);

        huffPostJButton.setText(bundle.getString("Huffington_Post")); // NOI18N
        huffPostJButton.setToolTipText(bundle.getString("Capture_the_Huffington_Post_blogs")); // NOI18N
        huffPostJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                huffPostJButtonActionPerformed(evt);
            }
        });
        commandsJPanel.add(huffPostJButton);

        zdnetTechJButton.setText(bundle.getString("ZDNet")); // NOI18N
        zdnetTechJButton.setToolTipText(bundle.getString("Capture_the_ZDNet_blogs")); // NOI18N
        zdnetTechJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zdnetTechJButtonActionPerformed(evt);
            }
        });
        commandsJPanel.add(zdnetTechJButton);

        znetJButton.setText(bundle.getString("ZNet")); // NOI18N
        znetJButton.setToolTipText(bundle.getString("Capture_the_ZNet_blogs")); // NOI18N
        znetJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                znetJButtonActionPerformed(evt);
            }
        });
        commandsJPanel.add(znetJButton);

        cancelJButton.setText(bundle.getString("Cancel")); // NOI18N
        cancelJButton.setToolTipText(bundle.getString("Cancel")); // NOI18N
        commandsJPanel.add(cancelJButton);

        add(commandsJPanel, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    private void znetJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_znetJButtonActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_znetJButtonActionPerformed

    private void zdnetTechJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zdnetTechJButtonActionPerformed
// TODO add your handling code here:
//        int rcount = sourcesTableModel.getRowCount();
//
//        targetPath = targetJTextField.getText();
//
//        if(targetPath.equals("") == true || (new File(targetPath).isDirectory() == false) )
//        {
//            JOptionPane.showMessageDialog(parentComponent, "Please fill in the target directory correctly.", "Error", JOptionPane.ERROR_MESSAGE);
//            return;
//        }
//        
//        String prefix = "/?m=";
//        
//        String months[] = new String[]{
//            "200712", "200711", "200710", "200709", "200708", "200707",
//            "200701", "200702", "200703", "200704", "200705", "200706",
//
//            "200612", "200611", "200610", "200609", "200608", "200607",
//            "200601", "200602", "200603", "200604", "200605", "200606",
//
//            "200512", "200511", "200510", "200509", "200508", "200507",
//            "200501", "200502", "200503", "200504", "200505", "200506",
//        };
//        
//        int pages = months.length;
//        
//        for (int i = 0; i < rcount; i++)
//        {
//            String srcTitle = (String) sourcesTableModel.getValueAt(i, 0);
//            String srcURL = (String) sourcesTableModel.getValueAt(i, 1) + prefix;
//            
//            File tgtFile = new File(targetPath, srcTitle);
//            tgtFile.mkdirs();
//                        
//            for (int j = 0; j < pages; j++)
//            {
//                String inSrcURL = srcURL + months[j];
//                
//                File inTgtFile = new File(tgtFile, months[j]);
//
//                siteCapturer = new org.htmlparser.parserapplications.SiteCapturer();
//                siteCapturer.setCaptureResources(false);
//
//                siteCapturer.setSource(inSrcURL);
//                siteCapturer.setTarget(inTgtFile.getAbsolutePath());
//
//                try {
//                    siteCapturer.capture();
//                }
//                catch (Exception e)
//                {
//                    e.printStackTrace();
//                }
//
//                File files[] = inTgtFile.listFiles();
//                
//                if(files != null)
//                {
//                    int fcount = files.length;
//
//                    if(fcount == 0)
//                    {
//                        inTgtFile.delete();
//                        break;
//                    }
//                    else
//                    {
//                        for (int k = 0; k < fcount; k++)
//                        {
//                            File newFile = new File(inTgtFile.getParent(), inTgtFile.getName() + "-" + files[k].getName());
//
//                            try {
//                                UtilityFunctions.copyFile(files[k], newFile);
//                            } catch (IOException ex) {
//                                ex.printStackTrace();
//                            }
//
//                            files[k].delete();
//                        }
//
//                        inTgtFile.delete();
//                    }
//                }
//            }
//        }                        
        
        int rcount = sourcesTableModel.getRowCount();

        targetPath = targetJTextField.getText();

        if(targetPath.equals("") == true || (new File(targetPath).isDirectory() == false) )
        {
            JOptionPane.showMessageDialog(parentComponent, GlobalProperties.getIntlString("Please_fill_in_the_target_directory_correctly."), GlobalProperties.getIntlString("Error"), JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        Hashtable blogs = new Hashtable(100, 20);
        
        for (int i = 0; i < rcount; i++)
        {
            String srcTitle = (String) sourcesTableModel.getValueAt(i, 0);
            String srcURL = (String) sourcesTableModel.getValueAt(i, 1);
            
            blogs.put(srcTitle, srcURL);
        }
                
        int pages = 200;
        
        Enumeration enm = blogs.keys();
        
        while(enm.hasMoreElements())
        {
            String srcTitle = (String) enm.nextElement();
            String srcURL = (String) blogs.get(srcTitle);

            File tgtFile = new File(targetPath, srcTitle);
            tgtFile.mkdir();
                        
            for (int j = 1; j <= pages; j++)
            {
                String inSrcURL = srcURL + "/index.php?paged=" + j;
                
                File inTgtFile = new File(tgtFile, "" + j);
                inTgtFile.mkdir();

                siteCapturer = new org.htmlparser.parserapplications.SiteCapturer();
                siteCapturer.setCaptureResources(false);

                siteCapturer.setSource(inSrcURL);
                siteCapturer.setTarget(inTgtFile.getAbsolutePath());            

                siteCapturer.capture();
                
                File files[] = inTgtFile.listFiles();
                int fcount = files.length;
                
                if(fcount == 0)
                {
                    inTgtFile.delete();
                    break;
                }
                else
                {
                    for (int k = 0; k < fcount; k++)
                    {
                        File newFile = new File(inTgtFile.getParent(), inTgtFile.getName() + "-" + files[k].getName());
 
                        try {
                            UtilityFunctions.copyFile(files[k], newFile);
                        } catch (IOException ex) {
                            ex.printStackTrace();
                        }
                        
                        files[k].delete();
                    }
                    
                    inTgtFile.delete();
                }
            }
        }        
    }//GEN-LAST:event_zdnetTechJButtonActionPerformed

    private void huffPostJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_huffPostJButtonActionPerformed
// TODO add your handling code here:
        int rcount = sourcesTableModel.getRowCount();

        targetPath = targetJTextField.getText();

        if(targetPath.equals("") == true || (new File(targetPath).isDirectory() == false) )
        {
            JOptionPane.showMessageDialog(parentComponent, GlobalProperties.getIntlString("Please_fill_in_the_target_directory_correctly."), GlobalProperties.getIntlString("Error"), JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        String huffPostPrefix = "http://www.huffingtonpost.com/authorarchive/?";
        
        String months[] = new String[]{
            "2007/12", "2007/11", "2007/10", "2007/09", "2007/08", "2007/07",
            "2007/01", "2007/02", "2007/03", "2007/04", "2007/05", "2007/06",

            "2006/12", "2006/11", "2006/10", "2006/09", "2006/08", "2006/07",
            "2006/01", "2006/02", "2006/03", "2006/04", "2006/05", "2006/06",

            "2005/12", "2005/11", "2005/10", "2005/09", "2005/08", "2005/07",
            "2005/01", "2005/02", "2005/03", "2005/04", "2005/05", "2005/06",
        };
        
        int pages = months.length;
        
        for (int i = 0; i < rcount; i++)
        {
            String srcTitle = (String) sourcesTableModel.getValueAt(i, 0);
            String srcURL = huffPostPrefix + srcTitle;

            File tgtFile = new File(targetPath, srcTitle);
            tgtFile.mkdir();
                        
            for (int j = 0; j < pages; j++)
            {
                String inSrcURL = srcURL + "/" + months[j];
                
                File inTgtFile = new File(tgtFile, months[j]);

                siteCapturer = new org.htmlparser.parserapplications.SiteCapturer();
                siteCapturer.setCaptureResources(false);

                siteCapturer.setSource(inSrcURL);
                siteCapturer.setTarget(inTgtFile.getAbsolutePath());

                try {
                    siteCapturer.capture();
                }
                catch (Exception e)
                {
                    e.printStackTrace();
                }

                File files[] = inTgtFile.listFiles();
                
                if(files != null)
                {
                    int fcount = files.length;

                    if(fcount == 0)
                    {
                        inTgtFile.delete();
                        break;
                    }
                    else
                    {
                        for (int k = 0; k < fcount; k++)
                        {
                            File newFile = new File(inTgtFile.getParent(), inTgtFile.getName() + "-" + files[k].getName());

                            try {
                                UtilityFunctions.copyFile(files[k], newFile);
                            } catch (IOException ex) {
                                ex.printStackTrace();
                            }

                            files[k].delete();
                        }

                        inTgtFile.delete();
                    }
                }
            }
        }                
    }//GEN-LAST:event_huffPostJButtonActionPerformed

    private void bloggerJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bloggerJButtonActionPerformed
// TODO add your handling code here:
        int rcount = sourcesTableModel.getRowCount();

        targetPath = targetJTextField.getText();

        if(targetPath.equals("") == true || (new File(targetPath).isDirectory() == false) )
        {
            JOptionPane.showMessageDialog(parentComponent, GlobalProperties.getIntlString("Please_fill_in_the_target_directory_correctly."), GlobalProperties.getIntlString("Error"), JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        String months[] = new String[]{
            GlobalProperties.getIntlString("2007_12_01_archive.html"), GlobalProperties.getIntlString("2007_11_01_archive.html"),
            GlobalProperties.getIntlString("2007_10_01_archive.html"), GlobalProperties.getIntlString("2007_09_01_archive.html"), GlobalProperties.getIntlString("2007_08_01_archive.html"),
            GlobalProperties.getIntlString("2007_07_01_archive.html"), GlobalProperties.getIntlString("2007_06_01_archive.html"), GlobalProperties.getIntlString("2007_05_01_archive.html"),
            GlobalProperties.getIntlString("2007_04_01_archive.html"), GlobalProperties.getIntlString("2007_03_01_archive.html"), GlobalProperties.getIntlString("2007_02_01_archive.html"),
            GlobalProperties.getIntlString("2007_01_01_archive.html"),
            GlobalProperties.getIntlString("2006_12_01_archive.html"), GlobalProperties.getIntlString("2006_11_01_archive.html"),
            GlobalProperties.getIntlString("2006_10_01_archive.html"), GlobalProperties.getIntlString("2006_09_01_archive.html"), GlobalProperties.getIntlString("2006_08_01_archive.html"),
            GlobalProperties.getIntlString("2006_07_01_archive.html"), GlobalProperties.getIntlString("2006_06_01_archive.html"), GlobalProperties.getIntlString("2006_05_01_archive.html"),
            GlobalProperties.getIntlString("2006_04_01_archive.html"), GlobalProperties.getIntlString("2006_03_01_archive.html"), GlobalProperties.getIntlString("2006_02_01_archive.html"),
            GlobalProperties.getIntlString("2006_01_01_archive.html"),
            GlobalProperties.getIntlString("2005_12_01_archive.html"), GlobalProperties.getIntlString("2005_11_01_archive.html"),
            GlobalProperties.getIntlString("2005_10_01_archive.html"), GlobalProperties.getIntlString("2005_09_01_archive.html"), GlobalProperties.getIntlString("2005_08_01_archive.html"),
            GlobalProperties.getIntlString("2005_07_01_archive.html"), GlobalProperties.getIntlString("2005_06_01_archive.html"), GlobalProperties.getIntlString("2005_05_01_archive.html"),
            GlobalProperties.getIntlString("2005_04_01_archive.html"), GlobalProperties.getIntlString("2005_03_01_archive.html"), GlobalProperties.getIntlString("2005_02_01_archive.html"),
            GlobalProperties.getIntlString("2005_01_01_archive.html"),
        };
        
        int pages = months.length;
        
        for (int i = 0; i < rcount; i++)
        {
            String srcTitle = (String) sourcesTableModel.getValueAt(i, 0);
            String srcURL = (String) sourcesTableModel.getValueAt(i, 1);

            File tgtFile = new File(targetPath, srcTitle);
            tgtFile.mkdir();
                        
            for (int j = 0; j < pages; j++)
            {
                String inSrcURL = srcURL + GlobalProperties.getIntlString("/") + months[j];
                
                File inTgtFile = new File(tgtFile, months[j]);

                siteCapturer = new org.htmlparser.parserapplications.SiteCapturer();
                siteCapturer.setCaptureResources(false);

                siteCapturer.setSource(inSrcURL);
                siteCapturer.setTarget(inTgtFile.getAbsolutePath());

                try {
                    siteCapturer.capture();
                }
                catch (Exception e)
                {
                    e.printStackTrace();
                }

                File files[] = inTgtFile.listFiles();
                
                if(files != null)
                {
                    int fcount = files.length;

                    if(fcount == 0)
                    {
                        inTgtFile.delete();
                        break;
                    }
                    else
                    {
                        for (int k = 0; k < fcount; k++)
                        {
                            File newFile = new File(inTgtFile.getParent(), inTgtFile.getName() + GlobalProperties.getIntlString("-") + files[k].getName());

                            try {
                                UtilityFunctions.copyFile(files[k], newFile);
                            } catch (IOException ex) {
                                ex.printStackTrace();
                            }

                            files[k].delete();
                        }

                        inTgtFile.delete();
                    }
                }
            }
        }        
    }//GEN-LAST:event_bloggerJButtonActionPerformed

    private void wordpressJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wordpressJButtonActionPerformed
// TODO add your handling code here:
        int rcount = sourcesTableModel.getRowCount();

        targetPath = targetJTextField.getText();

        if(targetPath.equals("") == true || (new File(targetPath).isDirectory() == false) )
        {
            JOptionPane.showMessageDialog(parentComponent, GlobalProperties.getIntlString("Please_fill_in_the_target_directory_correctly."), GlobalProperties.getIntlString("Error"), JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        Hashtable blogs = new Hashtable(100, 20);
        
        String wpDir = GlobalProperties.getIntlString("E:/docs/blog/anileklavya");
        
        for (int i = 0; i < rcount; i++)
        {
            String srcTitle = (String) sourcesTableModel.getValueAt(i, 0);
            String srcURL = (String) sourcesTableModel.getValueAt(i, 1);
            
            File wpFile = new File(wpDir, srcTitle + GlobalProperties.getIntlString(".xml"));
            
            if(wpFile.exists() == false)           
                blogs.put(srcTitle, srcURL);
            else
                System.out.println(GlobalProperties.getIntlString("\t\tBlog_already_downloaded:_") + srcTitle);
        }
                
        int pages = 200;
        
        Enumeration enm = blogs.keys();
        
        while(enm.hasMoreElements())
        {
            String srcTitle = (String) enm.nextElement();
            String srcURL = (String) blogs.get(srcTitle);

            File tgtFile = new File(targetPath, srcTitle);
            tgtFile.mkdir();
                        
            for (int j = 1; j <= pages; j++)
            {
                String inSrcURL = srcURL + GlobalProperties.getIntlString("/page/") + j;
                
                File inTgtFile = new File(tgtFile, "" + j);
                inTgtFile.mkdir();

                siteCapturer = new org.htmlparser.parserapplications.SiteCapturer();
                siteCapturer.setCaptureResources(false);

                siteCapturer.setSource(inSrcURL);
                siteCapturer.setTarget(inTgtFile.getAbsolutePath());            

                siteCapturer.capture();
                
                File files[] = inTgtFile.listFiles();
                int fcount = files.length;
                
                if(fcount == 0)
                {
                    inTgtFile.delete();
                    break;
                }
                else
                {
                    for (int k = 0; k < fcount; k++)
                    {
                        File newFile = new File(inTgtFile.getParent(), inTgtFile.getName() + GlobalProperties.getIntlString("-") + files[k].getName());
 
                        try {
                            UtilityFunctions.copyFile(files[k], newFile);
                        } catch (IOException ex) {
                            ex.printStackTrace();
                        }
                        
                        files[k].delete();
                    }
                    
                    inTgtFile.delete();
                }
            }
        }
    }//GEN-LAST:event_wordpressJButtonActionPerformed

    private void loadSrcJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadSrcJButtonActionPerformed
        try {
// TODO add your handling code here:
            
            if(sourceJTextField.getText().equals("") == false)
                sourcesTableModel.read(sourceJTextField.getText(), GlobalProperties.getIntlString("UTF-8"));
            else
                JOptionPane.showMessageDialog(parentComponent, GlobalProperties.getIntlString("Please_fill_in_the_source_URL_list_path."), GlobalProperties.getIntlString("Error"), JOptionPane.ERROR_MESSAGE);
        } catch (HeadlessException ex) {
            ex.printStackTrace();
        } catch (FileNotFoundException ex) {
            ex.printStackTrace();
        } catch (IOException ex) {
            ex.printStackTrace();
        }

    }//GEN-LAST:event_loadSrcJButtonActionPerformed

    private void targetBrowseJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_targetBrowseJButtonActionPerformed
// TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
	chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

        int returnVal = chooser.showOpenDialog(this);
        if(returnVal == JFileChooser.APPROVE_OPTION) {
           targetPath = chooser.getSelectedFile().getAbsolutePath();

           targetJTextField.setText(targetPath); 
        }                
    }//GEN-LAST:event_targetBrowseJButtonActionPerformed

    private void sourceBrowseJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sourceBrowseJButtonActionPerformed
// TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        int returnVal = chooser.showOpenDialog(this);
        if(returnVal == JFileChooser.APPROVE_OPTION) {
           sourcesPath = chooser.getSelectedFile().getAbsolutePath();

           sourceJTextField.setText(sourcesPath); 
        }        
    }//GEN-LAST:event_sourceBrowseJButtonActionPerformed

    public ClientType getClientType()
    {
        return clientType;
    }

    public String getLangEnc()
    {
        return langEnc;
    }

    public Frame getOwner() {
        return owner;
    }

    public void setOwner(Frame frame) {
        owner = (JFrame) frame;
    }

    public void setParentComponent(Component parentComponent)
    {
        this.parentComponent = parentComponent;
    }

    public void setDialog(JDialog dialog) {
        this.dialog=dialog;       
    }

    public String applicationDescription(){
        //Replace with appropriate description
        return null;
    }

    public String email() {
        return null;//Replace with appropriate email
    }

    public String getTitle() {
        return title;
    }

    public JMenuBar getJMenuBar() {
        return null;
    }

    public JPopupMenu getJPopupMenu() {
        return null;
    }

    public JToolBar getJToolBar() {
        return null;
    }
    
    public void windowOpened(WindowEvent e) {
    }

    public void windowClosing(WindowEvent e) {
    }

    public void windowClosed(WindowEvent e) {
    }

    public void windowIconified(WindowEvent e) {
    }

    public void windowDeiconified(WindowEvent e) {
    }

    public void windowActivated(WindowEvent e) {
    }

    public void windowDeactivated(WindowEvent e) {
    }    

    private static void createAndShowGUI() {
        //Make sure we have nice window decorations.
        JFrame.setDefaultLookAndFeelDecorated(true);

        //Create and set up the window.
        JFrame frame = new JFrame(GlobalProperties.getIntlString("Sanchay_Web_Corpus_Builder"));
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        BlogListCaptureJPanel newContentPane = new BlogListCaptureJPanel();
	
	newContentPane.owner = frame;
        newContentPane.setOpaque(true); //content panes must be opaque
        frame.setContentPane(newContentPane);
	frame.addWindowListener(newContentPane);

        //Display the window.
        frame.pack();
	
        int inset = 5;
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        frame.setBounds(inset, inset,
		screenSize.width  - inset*2,
		screenSize.height - inset*9);

	frame.setVisible(true);
        
        newContentPane.requestFocusInWindow();
    }

    public static void main(String[] args) {
        //Schedule a job for the event-dispatching thread:
        //creating and showing this application's GUI.
        javax.swing.SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                createAndShowGUI();
            }
        });
    }    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bloggerJButton;
    private javax.swing.JButton cancelJButton;
    private javax.swing.JPanel commandsJPanel;
    private javax.swing.JButton huffPostJButton;
    private javax.swing.JButton loadSrcJButton;
    private javax.swing.JButton sourceBrowseJButton;
    private javax.swing.JLabel sourceJLabel;
    private javax.swing.JPanel sourceJPanel;
    private javax.swing.JTextField sourceJTextField;
    private javax.swing.JPanel sourcesJPanel;
    private javax.swing.JScrollPane sourcesJScrollPanel;
    private javax.swing.JTable sourcesJTable;
    private javax.swing.JButton targetBrowseJButton;
    private javax.swing.JLabel targetJLabel;
    private javax.swing.JPanel targetJPanel;
    private javax.swing.JTextField targetJTextField;
    private javax.swing.JPanel topJPanel;
    private javax.swing.JButton wordpressJButton;
    private javax.swing.JButton zdnetTechJButton;
    private javax.swing.JButton znetJButton;
    // End of variables declaration//GEN-END:variables
    
}
