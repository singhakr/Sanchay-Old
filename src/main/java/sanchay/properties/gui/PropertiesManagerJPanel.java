/*
 * PropertiesManagerJPanel.java
 *
 * Created on October 4, 2005, 12:39 AM
 */

package sanchay.properties.gui;

import java.awt.Component;
import java.awt.Frame;
import java.io.*;
import java.util.*;
import javax.swing.*;
import sanchay.common.types.PropertyType;

import sanchay.gui.clients.SanchayClient;
import sanchay.properties.PropertiesManager;
import sanchay.properties.PropertiesTable;
import sanchay.properties.SanchayProperties;
import sanchay.table.gui.*;
import sanchay.common.types.ClientType;

/**
 *
 * @author  anil
 */
public class PropertiesManagerJPanel extends javax.swing.JPanel implements SanchayClient ,sanchay.gui.common.JPanelDialog {

    protected ClientType clientType = ClientType.FILE_SPLITTER;
    
    protected JFrame owner;
    protected JDialog dialog;
    protected Component parentComponent;

    protected JPanel containerJPanel;
    
    protected String propManFile;
    protected String propManCharset;

    protected String langEnc;
    protected String title = "";
    
    protected PropertiesManager propman;
    
    protected DefaultComboBoxModel propertyTypes;
    
    // Property types as the keys
    // DefaultComboBoxModels as values
    protected Hashtable propertyContainers;
    
    /** Creates new form PropertiesManagerJPanel */
    public PropertiesManagerJPanel(String pmPath, String charSet) {
        initComponents();

        parentComponent = this;
        
        propManFile = pmPath;
        propManCharset = charSet;
        
        configure(pmPath, charSet);
    }

    public ClientType getClientType()
    {
        return clientType;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        containerSelectionJPanel = new javax.swing.JPanel();
        propertyTypeJPanel = new javax.swing.JPanel();
        propertyTypeJLabel = new javax.swing.JLabel();
        propertyTypeJComboBox = new javax.swing.JComboBox();
        propertyContainerJPanel = new javax.swing.JPanel();
        propertyContainerJLabel = new javax.swing.JLabel();
        propertyContainerJComboBox = new javax.swing.JComboBox();
        propertiesJPanel = new javax.swing.JPanel();
        propertiesLabel = new javax.swing.JLabel();
        commandsJPanel = new javax.swing.JPanel();
        commands1JPanel = new javax.swing.JPanel();
        deleteJButton = new javax.swing.JButton();
        addJButton = new javax.swing.JButton();
        editProperties = new javax.swing.JButton();
        commands2JPanel = new javax.swing.JPanel();
        clearjButton = new javax.swing.JButton();
        resetProperties = new javax.swing.JButton();
        saveProperties = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        containerSelectionJPanel.setLayout(new javax.swing.BoxLayout(containerSelectionJPanel, javax.swing.BoxLayout.Y_AXIS));

        propertyTypeJPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        propertyTypeJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        propertyTypeJLabel.setLabelFor(propertyContainerJComboBox);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("sanchay"); // NOI18N
        propertyTypeJLabel.setText(bundle.getString("Property_type:")); // NOI18N
        propertyTypeJLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        propertyTypeJPanel.add(propertyTypeJLabel);

        propertyTypeJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                propertyTypeJComboBoxActionPerformed(evt);
            }
        });
        propertyTypeJPanel.add(propertyTypeJComboBox);

        containerSelectionJPanel.add(propertyTypeJPanel);

        propertyContainerJPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        propertyContainerJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        propertyContainerJLabel.setLabelFor(propertyContainerJComboBox);
        propertyContainerJLabel.setText(bundle.getString("Property_container:")); // NOI18N
        propertyContainerJLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        propertyContainerJPanel.add(propertyContainerJLabel);

        propertyContainerJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                propertyContainerJComboBoxActionPerformed(evt);
            }
        });
        propertyContainerJPanel.add(propertyContainerJComboBox);

        containerSelectionJPanel.add(propertyContainerJPanel);

        add(containerSelectionJPanel, java.awt.BorderLayout.NORTH);

        propertiesJPanel.setLayout(new java.awt.BorderLayout());

        propertiesLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        propertiesLabel.setText(bundle.getString("Properties")); // NOI18N
        propertiesLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        propertiesJPanel.add(propertiesLabel, java.awt.BorderLayout.NORTH);

        add(propertiesJPanel, java.awt.BorderLayout.CENTER);

        commandsJPanel.setLayout(new java.awt.GridLayout(2, 1));

        commands1JPanel.setLayout(new java.awt.GridLayout(1, 0));

        deleteJButton.setText(bundle.getString("Delete")); // NOI18N
        deleteJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteJButtonActionPerformed(evt);
            }
        });
        commands1JPanel.add(deleteJButton);

        addJButton.setText(bundle.getString("Add")); // NOI18N
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });
        commands1JPanel.add(addJButton);

        editProperties.setLabel(bundle.getString("Edit")); // NOI18N
        editProperties.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPropertiesActionPerformed(evt);
            }
        });
        commands1JPanel.add(editProperties);

        commandsJPanel.add(commands1JPanel);

        commands2JPanel.setLayout(new java.awt.GridLayout(1, 0));

        clearjButton.setText(bundle.getString("Clear")); // NOI18N
        clearjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearjButtonActionPerformed(evt);
            }
        });
        commands2JPanel.add(clearjButton);

        resetProperties.setText(bundle.getString("Reset")); // NOI18N
        resetProperties.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetPropertiesActionPerformed(evt);
            }
        });
        commands2JPanel.add(resetProperties);

        saveProperties.setText(bundle.getString("Save")); // NOI18N
        saveProperties.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savePropertiesActionPerformed(evt);
            }
        });
        commands2JPanel.add(saveProperties);

        commandsJPanel.add(commands2JPanel);

        add(commandsJPanel, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents
    
    private void savePropertiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savePropertiesActionPerformed
// TODO add your handling code here:
        String selProperty = (String) propertyTypeJComboBox.getSelectedItem();
        String selContainer = (String) propertyContainerJComboBox.getSelectedItem();
        
        if(selProperty.equals("") == false && selContainer.equals("") == false) {
            try {
                propman.savePropertyContainer(selContainer, (PropertyType) PropertyType.findFromId(selProperty));
            } catch(Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_savePropertiesActionPerformed
    
    private void resetPropertiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetPropertiesActionPerformed
// TODO add your handling code here:
        configure(propManFile, propManCharset);
    }//GEN-LAST:event_resetPropertiesActionPerformed
    
    private void clearjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearjButtonActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_clearjButtonActionPerformed
    
    private void editPropertiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPropertiesActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_editPropertiesActionPerformed
    
    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_addJButtonActionPerformed
    
    private void deleteJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteJButtonActionPerformed
// TODO add your handling code here:
        String selProperty = (String) propertyTypeJComboBox.getSelectedItem();
        String selContainer = (String) propertyContainerJComboBox.getSelectedItem();
        
        if(selProperty.equals("") == false && selContainer.equals("") == false) {
            try {
                propman.removePropertyContainer(selContainer, (PropertyType) PropertyType.findFromId(selProperty));
                propman.getProperties().save(propManFile, propManCharset);
                
                configure(propManFile, propManCharset);
            } catch(Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_deleteJButtonActionPerformed
    
    private void propertyContainerJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_propertyContainerJComboBoxActionPerformed
// TODO add your handling code here:
        showProperties();
    }//GEN-LAST:event_propertyContainerJComboBoxActionPerformed
    
    private void propertyTypeJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_propertyTypeJComboBoxActionPerformed
// TODO add your handling code here:
        fillPropertyContainerList();
    }//GEN-LAST:event_propertyTypeJComboBoxActionPerformed
    
    private void fillPropertyContainerList() {
        String selItem = (String) propertyTypeJComboBox.getSelectedItem();
        if(selItem.equals("") == false) {
            DefaultComboBoxModel cbm = (DefaultComboBoxModel) propertyContainers.get(selItem);
            propertyContainerJComboBox.setModel(cbm);
        }
        
        showProperties();
    }
    
    private void showProperties() {
        if(containerJPanel != null)
            propertiesJPanel.remove(containerJPanel);
        
        String selProperty = (String) propertyTypeJComboBox.getSelectedItem();
        String selContainer = (String) propertyContainerJComboBox.getSelectedItem();
        
        if(selProperty.equals("") == false && selContainer.equals("") == false) {
            PropertyType pt = (PropertyType) PropertyType.findFromId(selProperty);
            SanchayProperties prop = propman.getPropertyContainer(selContainer, pt);
            
            String tableFile = "";
            String charset = "";
            int colCount = -1;
            
            PropertiesTable proptbl = (PropertiesTable) propman.getProperties();
            
            String colNames[] = {"PCType", "PCClass"};
            String colVals[] = {selProperty, selContainer};
            String outColNames[] = {"FilePath", "Charset", "ColCount"};
            
            try {
                
                Vector v = proptbl.getValuesAnd(colNames, colVals, outColNames);
                if(v.size() != 1) {
                    JOptionPane.showMessageDialog(parentComponent, sanchay.GlobalProperties.getIntlString("Error_in_Properties_Manager_file:_") + selContainer, sanchay.GlobalProperties.getIntlString("Error"), JOptionPane.ERROR_MESSAGE);
                    return;
                }
                
                tableFile = (String) ((Vector) v.get(0)).get(0);
                charset = (String) ((Vector) v.get(0)).get(1);
                String colCountString = (String) ((Vector) v.get(0)).get(2);
                colCount = Integer.parseInt(colCountString);
            } catch (Exception ex) {
                ex.printStackTrace();
            }
            
            try {
                if(pt == PropertyType.PROPERTY_TOKENS) {
                    containerJPanel = new TKVPropertiesJPanel(tableFile, charset,
                            false, null);
                } else if(pt == PropertyType.KEY_VALUE_PROPERTIES) {
                    containerJPanel = new TKVPropertiesJPanel(tableFile, charset,
                            false, null);
                } else if(pt == PropertyType.PROPERTY_TABLE) {
                    containerJPanel = new SanchayTableJPanel(tableFile, charset, true, null, SanchayTableJPanel.MINIMAL_MODE, sanchay.GlobalProperties.getIntlString("hin::utf8"));
                }
            } catch (FileNotFoundException ex) {
                ex.printStackTrace();
            } catch (IOException ex) {
                ex.printStackTrace();
            }
            
            propertiesJPanel.add(containerJPanel, java.awt.BorderLayout.CENTER);
            propertiesJPanel.setVisible(false);
            propertiesJPanel.setVisible(true);
        }
    }
    
    public void configure(String pmPath, String charSet) {
        if(propertyTypes != null)
            propertyTypes.removeAllElements();
        
        propertyContainers = new Hashtable();
        
        try {
            propman = new PropertiesManager(pmPath, charSet);
            propman.print(System.out);
        } catch (FileNotFoundException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (Exception e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        
        propertyTypes = new DefaultComboBoxModel();
        
        Enumeration penm = PropertyType.elements();
        while(penm.hasMoreElements()) {
            PropertyType pt = (PropertyType) penm.nextElement();
            
            DefaultComboBoxModel cbm = new DefaultComboBoxModel();
            
            Enumeration cenm = propman.getPropertyContainerKeys(pt);
            
            if(cenm != null) {
                while(cenm.hasMoreElements()) {
                    String pckey = (String) cenm.nextElement();
                    cbm.addElement(pckey);
                }
            }
            
            if(cbm.getSize() > 0) {
                propertyTypes.addElement(pt.toString());
                propertyContainers.put(pt.toString(), cbm);
            }
        }
        
        propertyTypeJComboBox.setModel(propertyTypes);
        fillPropertyContainerList();
    }

    public String getLangEnc()
    {
        return langEnc;
    }
    
    public Frame getOwner() {
        return owner;
    }
    
    public void setOwner(Frame f) {
        owner = (JFrame) f;
    }

    public void setParentComponent(Component parentComponent)
    {
        this.parentComponent = parentComponent;
    }
    
    public void setDialog(JDialog d) {
        dialog = d;
    }

    public String getTitle() {
        return title;
    }
    
    public JMenuBar getJMenuBar() {
        return null;
    }
    
    public JToolBar getJToolBar() {
        return null;
    }
    
    public JPopupMenu getJPopupMenu() {
        return null;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton addJButton;
    public javax.swing.JButton clearjButton;
    public javax.swing.JPanel commands1JPanel;
    public javax.swing.JPanel commands2JPanel;
    public javax.swing.JPanel commandsJPanel;
    public javax.swing.JPanel containerSelectionJPanel;
    public javax.swing.JButton deleteJButton;
    public javax.swing.JButton editProperties;
    public javax.swing.JPanel propertiesJPanel;
    public javax.swing.JLabel propertiesLabel;
    public javax.swing.JComboBox propertyContainerJComboBox;
    public javax.swing.JLabel propertyContainerJLabel;
    public javax.swing.JPanel propertyContainerJPanel;
    public javax.swing.JComboBox propertyTypeJComboBox;
    public javax.swing.JLabel propertyTypeJLabel;
    public javax.swing.JPanel propertyTypeJPanel;
    public javax.swing.JButton resetProperties;
    public javax.swing.JButton saveProperties;
    // End of variables declaration//GEN-END:variables
    
}
